"""empty message

Revision ID: e7387f7777a7
Revises: de6d7077e675
Create Date: 2025-03-17 16:12:45.329328

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e7387f7777a7'
down_revision = 'de6d7077e675'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hotel_phone',
    sa.Column('hotel_id', sa.Integer(), nullable=False),
    sa.Column('phone_num_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hotel_id'], ['hotel.id'], ),
    sa.ForeignKeyConstraint(['phone_num_id'], ['phone_number.id'], )
    )

    hotel_phone = sa.sql.table('hotel_phone',
                               sa.Column('hotel_id', sa.Integer, nullable=False),
                               sa.Column('phone_num_id', sa.Integer, nullable=False)
                               )
    conn = op.get_bind()
    results = conn.execute(sa.text("select hotel_id, id from phone_number")).fetchall()
    values = [{'hotel_id': r[0], 'phone_num_id': r[1]} for r in results]
    op.bulk_insert(hotel_phone, values)

    with op.batch_alter_table('phone_number', schema=None) as batch_op:
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=24),
               nullable=False)
        batch_op.alter_column('href_phone',
               existing_type=sa.VARCHAR(length=16),
               nullable=False)
        batch_op.drop_constraint('phone_number_hotel_id_fkey', type_='foreignkey')
        batch_op.drop_column('hotel_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('phone_number', schema=None) as batch_op:
        batch_op.add_column(sa.Column('hotel_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('phone_number_hotel_id_fkey', 'hotel', ['hotel_id'], ['id'])
        batch_op.alter_column('href_phone',
               existing_type=sa.VARCHAR(length=16),
               nullable=True)
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=24),
               nullable=True)

    phone_number = sa.sql.table('phone_number',
                                sa.Column('id', sa.Integer, nullable=False),
                                sa.Column('hotel_id', sa.Integer, nullable=False)
                                )

    conn = op.get_bind()
    results = conn.execute(sa.text("select hotel_id, phone_num_id from hotel_phone")).fetchall()
    values = [{'hotel_id': r[0], 'id': r[1]} for r in results]
    for value in values:
        op.execute(phone_number.update().where(phone_number.c.id == value['id'])
                   .values({"hotel_id": value['hotel_id']}))
    op.alter_column("phone_number", "hotel_id", nullable=False)

    op.drop_table('hotel_phone')
    # ### end Alembic commands ###
